what is maven archetype?
to be done. Take Maven course

what is spring cli?
It provides cli ways to create spring application.
Does the functionality of the spring initializr
Provides a way to run spring applications

What is spring tools suite?
Spring tools suite is a eclipse plugin that makes spring developement in eclipse easy
when installed, can support validation of spring config files
Graphical visualization of bean dependencies

There is a parent mentioned in maven project. The project inherits the contents of the parents and then customized it
The maven project has properties such as java.version
The maven project adds dependencies
What are the scope of dependencies that can be added?
What is the default scope of dependencies that are added?
What is exclusions while addint dependency?

what are build plugin in maven?
Is it got to something with building the project
If build plugins are supported in maven whats the advantage of gradle



How can all the maven project have parent. Is that recursive?
Who is using the properties set in maven

Why @RestController is needed if the methods of the class has RequestMapping?
Isn't that implied?

Who defines the convention for application.properties? server.port?

In spring boot, what happened the Dispatcher servlet? Is it provided by a spring library?
Where has spring configured the embedded Tom cat server?
How to change the embedded tom cat server of the spring boot application?

Why the version changed from 1.8 to 11? and not 1.11?

Why is @SpringBootApplication annotation necessary?
Marks the configuration class.
Can declare one or more @Bean methods
Also triggers the auto-configuration
And component scanning



ClassName.class in java?
It gives an object that models the class of the object
It gives the run time class of the object
Similar to typeof(ClassName) in C#


What is the @Retention of annotation?
This annotation tells till what point of time the defined annotation will be available
Source, Class, runtime
Source -> striped by compiler
class -> stripped by the class loader while loading in to VM
runtime -> available at run time in the VM
Class annotations are recorded in the class files and can be read by other byte code parsers

What is the @Documented annotation for annotation?
This can be used while creating annotations
When annotated this way, the JavaDocs will show that class is annotated

Can you please tell more about annotations?
annotation are created with @interface
They are can be applied to various things
They have various retentions


How to annotate a package?
As shown below
@PackageLevelAnnotation
package blammy; // package with a package level annotation.

What are the annotations used only while creating another annotation?
 @Documented  – Whether to put the annotation in Javadocs
 @Retention  – When the annotation is needed
 @Target?  – Places the annotation can go
 @Inherited  – Whether subclasses get the annotation.

What are the possible targets for annotations?
ElementType.TYPE (class, interface, enum)
ElementType.FIELD (instance variable)
ElementType.METHOD
ElementType.PARAMETER
ElementType.CONSTRUCTOR
ElementType.LOCAL_VARIABLE
ElementType.ANNOTATION_TYPE (on another annotation)
ElementType.PACKAGE (remember package-info.java)

What is an ADF?
Spring is an ADF (Application Development Framework)
ADFs hugely rely on annotations

Is it possible to have annotation inheritance?
Annotating one annotation with another makes the annotated annotation inherit the annotating annotation
So multiple inheritance possible in annotation

@RequestBody is used to annotate a parameter.
Is say the request body has to be deserialized in the parameter













