maven archetype

spring cli

spring tools suite


mvn archetype:generate
Take a maven course

There is a parent mentioned in maven project. The project inherits the contents of the parents and then customized it
The maven project has properties such as java.version
The maven project adds dependencies
What are the scope of dependencies that can be added?
What is the default scope of dependencies that are added?
What is exclusions while addint dependency?

what are build plugin in maven?
Is it got to something with building the project
If build plugins are supported in maven whats the advantage of gradle



How can all the maven project have parent. Is that recursive?
Who is using the properties set in maven

Why @RestController is needed if the methods of the class has RequestMapping?
Isn't that implied?

Who defines the convention for application.properties? server.port?

In spring boot, what happened the Dispatcher servlet? Is it provided by a spring library?
Where has spring configured the embedded Tom cat server?
How to change the embedded tom cat server of the spring boot application?

Why the version changed from 1.8 to 11? and not 1.11?

Why is @SpringBootApplication annotation necessary?
Marks the configuration class.
Can declare one or more @Bean methods
Also triggers the auto-configuration
And component scanning



ClassName.class in java?
It gives an object that models the class of the object
It gives the run time class of the object
Similar to typeof(ClassName) in C#


What is the @Retention of annotation?
This annotation tells till what point of time the defined annotation will be available
Source, Class, runtime
Source -> striped by compiler
class -> stripped by the class loader while loading in to VM
runtime -> available at run time in the VM
Class annotations are recorded in the class files and can be read by other byte code parsers

What is the @Documented annotation for annotation
Understand more about annotations


How to annotate a package?
@PackageLevelAnnotation
package blammy; // package with a package level annotation.

Annotation that are used only while creating annotations
 @Documented  – Whether to put the annotation in Javadocs
 @Retention  – When the annotation is needed
 @Target?  – Places the annotation can go
 @Inherited  – Whether subclasses get the annotation.

Target annotation values are
ElementType.TYPE (class, interface, enum)
ElementType.FIELD (instance variable)
ElementType.METHOD
ElementType.PARAMETER
ElementType.CONSTRUCTOR
ElementType.LOCAL_VARIABLE
ElementType.ANNOTATION_TYPE (on another annotation)
ElementType.PACKAGE (remember package-info.java)

Spring is an ADF (Application Development Framework)
ADFs hugely rely on annotations











